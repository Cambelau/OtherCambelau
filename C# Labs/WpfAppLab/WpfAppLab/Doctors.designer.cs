#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfAppLab
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Hospital")]
	public partial class DoctorsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertDoctors(Doctors instance);
    partial void UpdateDoctors(Doctors instance);
    partial void DeleteDoctors(Doctors instance);
    #endregion
		
		public DoctorsDataContext() : 
				base(global::WpfAppLab.Properties.Settings.Default.HospitalConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DoctorsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoctorsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoctorsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoctorsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Doctors> Doctors
		{
			get
			{
				return this.GetTable<Doctors>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctors")]
	public partial class Doctors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DoctorId;
		
		private string _DoctorName;
		
		private string _DoctorTel;
		
		private string _HiringDate;
		
		private string _DoctorSpecialism;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDoctorIdChanging(int value);
    partial void OnDoctorIdChanged();
    partial void OnDoctorNameChanging(string value);
    partial void OnDoctorNameChanged();
    partial void OnDoctorTelChanging(string value);
    partial void OnDoctorTelChanged();
    partial void OnHiringDateChanging(string value);
    partial void OnHiringDateChanged();
    partial void OnDoctorSpecialismChanging(string value);
    partial void OnDoctorSpecialismChanged();
    #endregion
		
		public Doctors()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DoctorId
		{
			get
			{
				return this._DoctorId;
			}
			set
			{
				if ((this._DoctorId != value))
				{
					this.OnDoctorIdChanging(value);
					this.SendPropertyChanging();
					this._DoctorId = value;
					this.SendPropertyChanged("DoctorId");
					this.OnDoctorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="NChar(10)")]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this.OnDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._DoctorName = value;
					this.SendPropertyChanged("DoctorName");
					this.OnDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorTel", DbType="NChar(10)")]
		public string DoctorTel
		{
			get
			{
				return this._DoctorTel;
			}
			set
			{
				if ((this._DoctorTel != value))
				{
					this.OnDoctorTelChanging(value);
					this.SendPropertyChanging();
					this._DoctorTel = value;
					this.SendPropertyChanged("DoctorTel");
					this.OnDoctorTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiringDate", DbType="NChar(10)")]
		public string HiringDate
		{
			get
			{
				return this._HiringDate;
			}
			set
			{
				if ((this._HiringDate != value))
				{
					this.OnHiringDateChanging(value);
					this.SendPropertyChanging();
					this._HiringDate = value;
					this.SendPropertyChanged("HiringDate");
					this.OnHiringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorSpecialism", DbType="NChar(10)")]
		public string DoctorSpecialism
		{
			get
			{
				return this._DoctorSpecialism;
			}
			set
			{
				if ((this._DoctorSpecialism != value))
				{
					this.OnDoctorSpecialismChanging(value);
					this.SendPropertyChanging();
					this._DoctorSpecialism = value;
					this.SendPropertyChanged("DoctorSpecialism");
					this.OnDoctorSpecialismChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
